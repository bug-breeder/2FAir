version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: 2fair-postgres
    environment:
      POSTGRES_DB: 2fair
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d 2fair"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: 2fair-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 2fair-backend
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - ENVIRONMENT=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=2fair
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL_MODE=disable
      - JWT_SIGNING_KEY=dev-super-secret-jwt-signing-key-change-in-production
      - JWT_EXPIRATION_TIME=1h
      - JWT_REFRESH_TIME=24h
      - JWT_ISSUER=2fair.dev
      - JWT_AUDIENCE=2fair.dev
      - WEBAUTHN_RP_DISPLAY_NAME=2FAir
      - WEBAUTHN_RP_ID=localhost
      - WEBAUTHN_RP_ORIGINS=http://localhost:3000,http://localhost:8080
      - WEBAUTHN_TIMEOUT=60s
      - RATE_LIMIT_RPS=100
      - RATE_LIMIT_BURST=200
      - CORS_ORIGINS=http://localhost:3000
      - CSP_POLICY=default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
