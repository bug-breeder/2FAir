// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"net/netip"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type AuditLog struct {
	ID           pgtype.UUID        `json:"id"`
	UserID       pgtype.UUID        `json:"user_id"`
	Action       string             `json:"action"`
	ResourceType string             `json:"resource_type"`
	ResourceID   pgtype.UUID        `json:"resource_id"`
	Metadata     []byte             `json:"metadata"`
	IpAddress    *netip.Addr        `json:"ip_address"`
	UserAgent    pgtype.Text        `json:"user_agent"`
	Timestamp    pgtype.Timestamptz `json:"timestamp"`
}

type BackupRecoveryCode struct {
	ID                  pgtype.UUID        `json:"id"`
	UserID              pgtype.UUID        `json:"user_id"`
	EncryptedBackupData []byte             `json:"encrypted_backup_data"`
	RecoveryCodeHash    []byte             `json:"recovery_code_hash"`
	IsUsed              pgtype.Bool        `json:"is_used"`
	CreatedAt           pgtype.Timestamptz `json:"created_at"`
	UsedAt              pgtype.Timestamptz `json:"used_at"`
}

type DeviceSession struct {
	ID                pgtype.UUID        `json:"id"`
	UserID            pgtype.UUID        `json:"user_id"`
	DeviceFingerprint string             `json:"device_fingerprint"`
	DeviceName        pgtype.Text        `json:"device_name"`
	LastSyncAt        pgtype.Timestamptz `json:"last_sync_at"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
}

type EncryptedTotpSeed struct {
	ID                pgtype.UUID        `json:"id"`
	UserID            pgtype.UUID        `json:"user_id"`
	ServiceName       string             `json:"service_name"`
	AccountIdentifier string             `json:"account_identifier"`
	EncryptedSecret   []byte             `json:"encrypted_secret"`
	Algorithm         string             `json:"algorithm"`
	Digits            int32              `json:"digits"`
	Period            int32              `json:"period"`
	Issuer            pgtype.Text        `json:"issuer"`
	IconUrl           pgtype.Text        `json:"icon_url"`
	IsActive          pgtype.Bool        `json:"is_active"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
	UpdatedAt         pgtype.Timestamptz `json:"updated_at"`
}

type LinkingCode struct {
	ID        pgtype.UUID        `json:"id"`
	UserID    pgtype.UUID        `json:"user_id"`
	Code      string             `json:"code"`
	IsUsed    bool               `json:"is_used"`
	ExpiresAt time.Time          `json:"expires_at"`
	UsedAt    pgtype.Timestamptz `json:"used_at"`
	CreatedAt time.Time          `json:"created_at"`
	UpdatedAt time.Time          `json:"updated_at"`
}

type SyncOperation struct {
	ID                pgtype.UUID        `json:"id"`
	UserID            pgtype.UUID        `json:"user_id"`
	OperationType     string             `json:"operation_type"`
	EntityType        string             `json:"entity_type"`
	EntityID          pgtype.UUID        `json:"entity_id"`
	OperationData     []byte             `json:"operation_data"`
	DeviceFingerprint string             `json:"device_fingerprint"`
	Timestamp         pgtype.Timestamptz `json:"timestamp"`
}

type User struct {
	ID          pgtype.UUID        `json:"id"`
	Username    string             `json:"username"`
	Email       string             `json:"email"`
	DisplayName string             `json:"display_name"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	LastLoginAt pgtype.Timestamptz `json:"last_login_at"`
	IsActive    pgtype.Bool        `json:"is_active"`
}

type UserEncryptionKey struct {
	ID                   pgtype.UUID        `json:"id"`
	UserID               pgtype.UUID        `json:"user_id"`
	WebauthnCredentialID pgtype.UUID        `json:"webauthn_credential_id"`
	EncryptedDek         []byte             `json:"encrypted_dek"`
	KeyVersion           int32              `json:"key_version"`
	CreatedAt            pgtype.Timestamptz `json:"created_at"`
}

type WebauthnCredential struct {
	ID              pgtype.UUID        `json:"id"`
	UserID          pgtype.UUID        `json:"user_id"`
	CredentialID    []byte             `json:"credential_id"`
	PublicKey       []byte             `json:"public_key"`
	AttestationType string             `json:"attestation_type"`
	Transport       []string           `json:"transport"`
	Flags           []byte             `json:"flags"`
	Authenticator   []byte             `json:"authenticator"`
	DeviceName      pgtype.Text        `json:"device_name"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	LastUsedAt      pgtype.Timestamptz `json:"last_used_at"`
	Aaguid          pgtype.UUID        `json:"aaguid"`
	CloneWarning    bool               `json:"clone_warning"`
	SignCount       int64              `json:"sign_count"`
	Attachment      pgtype.Text        `json:"attachment"`
	BackupEligible  bool               `json:"backup_eligible"`
	BackupState     bool               `json:"backup_state"`
}
