// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"net/netip"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type AuditLog struct {
	ID              pgtype.UUID        `json:"id"`
	UserID          pgtype.UUID        `json:"user_id"`
	DeviceSessionID pgtype.UUID        `json:"device_session_id"`
	EventType       string             `json:"event_type"`
	EventDetails    []byte             `json:"event_details"`
	IpAddress       *netip.Addr        `json:"ip_address"`
	UserAgent       pgtype.Text        `json:"user_agent"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
}

type BackupRecoveryCode struct {
	ID                    pgtype.UUID        `json:"id"`
	UserID                pgtype.UUID        `json:"user_id"`
	EncryptedRecoveryBlob []byte             `json:"encrypted_recovery_blob"`
	Salt                  []byte             `json:"salt"`
	Hint                  pgtype.Text        `json:"hint"`
	CreatedAt             pgtype.Timestamptz `json:"created_at"`
	UsedAt                pgtype.Timestamptz `json:"used_at"`
	IsActive              pgtype.Bool        `json:"is_active"`
}

type DeviceSession struct {
	ID         pgtype.UUID        `json:"id"`
	UserID     pgtype.UUID        `json:"user_id"`
	DeviceID   string             `json:"device_id"`
	DeviceName string             `json:"device_name"`
	DeviceType string             `json:"device_type"`
	UserAgent  pgtype.Text        `json:"user_agent"`
	IpAddress  *netip.Addr        `json:"ip_address"`
	LastSyncAt pgtype.Timestamptz `json:"last_sync_at"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	ExpiresAt  time.Time          `json:"expires_at"`
	IsActive   pgtype.Bool        `json:"is_active"`
}

type EncryptedTotpSeed struct {
	ID          pgtype.UUID        `json:"id"`
	UserID      pgtype.UUID        `json:"user_id"`
	KeyVersion  int32              `json:"key_version"`
	Ciphertext  []byte             `json:"ciphertext"`
	Iv          []byte             `json:"iv"`
	AuthTag     []byte             `json:"auth_tag"`
	Issuer      string             `json:"issuer"`
	AccountName string             `json:"account_name"`
	IconUrl     pgtype.Text        `json:"icon_url"`
	Tags        []string           `json:"tags"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	SyncedAt    pgtype.Timestamptz `json:"synced_at"`
}

type SyncOperation struct {
	ID              pgtype.UUID        `json:"id"`
	UserID          pgtype.UUID        `json:"user_id"`
	DeviceSessionID pgtype.UUID        `json:"device_session_id"`
	OperationType   string             `json:"operation_type"`
	ResourceType    string             `json:"resource_type"`
	ResourceID      pgtype.UUID        `json:"resource_id"`
	TimestampVector int64              `json:"timestamp_vector"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID          pgtype.UUID        `json:"id"`
	Username    string             `json:"username"`
	Email       string             `json:"email"`
	DisplayName string             `json:"display_name"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	LastLoginAt pgtype.Timestamptz `json:"last_login_at"`
	IsActive    pgtype.Bool        `json:"is_active"`
}

type UserEncryptionKey struct {
	ID         pgtype.UUID        `json:"id"`
	UserID     pgtype.UUID        `json:"user_id"`
	KeyVersion int32              `json:"key_version"`
	WrappedDek []byte             `json:"wrapped_dek"`
	Salt       []byte             `json:"salt"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	IsActive   pgtype.Bool        `json:"is_active"`
}

type WebauthnCredential struct {
	ID             pgtype.UUID        `json:"id"`
	UserID         pgtype.UUID        `json:"user_id"`
	CredentialID   []byte             `json:"credential_id"`
	PublicKey      []byte             `json:"public_key"`
	Aaguid         pgtype.UUID        `json:"aaguid"`
	CloneWarning   pgtype.Bool        `json:"clone_warning"`
	Attachment     pgtype.Text        `json:"attachment"`
	Transport      []string           `json:"transport"`
	BackupEligible pgtype.Bool        `json:"backup_eligible"`
	BackupState    pgtype.Bool        `json:"backup_state"`
	SignCount      pgtype.Int8        `json:"sign_count"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	LastUsedAt     pgtype.Timestamptz `json:"last_used_at"`
}
